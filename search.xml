<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo站点配置]]></title>
    <url>%2F2018%2F01%2F16%2Fhexo%E7%AB%99%E7%82%B9%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[此篇博客主要讲解Hexo的站点配置、主题配置和使用以及博客文章的发布。在Hexo中有两份主要的配置文件，其名称都是_config.yml。其中，一份位于站点根目录下，主要包含Hexo本身的配置,我们称之为全局配置文件；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项,我们称之为主题配置文件。 hexo的官方网站：https://hexo.io/，里面有hexo的详细说明文档，不过是英文的。没关系，英语不好的请往下看。 注意：配置文件中每个字段后面的冒号是英文格式的，且在其后要加一个空格再写值 hexo站点配置编辑hexo目录下的_config.yml文件，具体配置如下： # Hexo Configuration ## Docs: https://hexo.io/docs/configuration.html ## Source: https://github.com/hexojs/hexo/ # Site 站点信息配置，根据自己的需要进行修改 title: Line&apos;s Blog #站点名，会在浏览器页面标签左上角显示 subtitle: Love Coding,Enjoy Life #副标题 description: fzy-line #对站点的描述，给搜索引擎看的，可以自定义 author: Line #网站作者 language: zh-Hans #网站语言 timezone: Asia/Shanghai #时区 avatar: /images/logo.jpg #网站logo，会在浏览器页面标签左上角显示 # URL 博客地址,与申请的GitHub一致 ## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos; url: https://fzy-line.github.io/ root: / #博客链接格式 permalink: :year/:month/:day/:title/ permalink_defaults: # Directory #目录设置，一般不修改 source_dir: source #资源文件夹，放在里面的文件会上传到github中 public_dir: public #公共文件夹，存放生成的静态文件 tag_dir: tags #标签文件夹，默认是tags。实际存放在source/tags中。 archive_dir: archives #档案文件夹，默认是archives。 category_dir: categories #分类文件夹，默认是categories。实际存放在source/categories中。 code_dir: downloads/code #代码文件夹，默认是downloads/code i18n_dir: :lang #国际化文件夹，默认跟language相同 skip_render: #跳过指定文件的渲染，您可使用 glob 来配置路径。 # Writing 这是文章布局、写作格式的定义，一般不修改 new_post_name: :title.md # File name of new posts default_layout: post titlecase: false # Transform title into titlecase external_link: true # Open external links in new tab filename_case: 0 render_drafts: false post_asset_folder: false relative_link: false future: true highlight: enable: true line_number: true auto_detect: false tab_replace: # Category &amp; Tag #分类和标签，一般不修改 default_category: uncategorized category_map: tag_map: # Date / Time format #日期、时间格式，一般不修改 ## Hexo uses Moment.js to parse and display date ## You can customize the date format as defined in ## http://momentjs.com/docs/#/displaying/format/ date_format: YYYY-MM-DD time_format: HH:mm:ss # Pagination #可根据自己需要修改 ## Set per_page to 0 to disable pagination per_page: 6 #分页，每页文章数量 pagination_dir: page # Extensions #扩展 ## Plugins: https://hexo.io/plugins/ ## Themes: https://hexo.io/themes/ theme: next #博客主题 # Deployment 这里配置站点部署到Github，上一节中已经讲过 ## Docs: https://hexo.io/docs/deployment.html deploy: type: git repository: git@github.com:你的Github用户名.github.io.git branch: master 使用主题Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。hexo官方主题下载地址：https://hexo.io/themes/，里面有多种多样的主题模板供大家选择。这里推荐一款很火的主题：next，下面的配置也是以这个主题为例。如果你使用的是其他的主题，那么请你自己根据说明文档进行配置。next主题的官网，有很详细的配置文档：http://theme-next.iissnan.com/ 下载主题next下载地址：https://github.com/iissnan/hexo-theme-next到Gtihub下载此主题后解压，打开可以看到里面很多主题相关的文件，我们将此文件夹改名为next，然后将它复制到站点目录的/themes/目录下。 启用主题hexo默认是使用的landscape主题，我们可以在站点目录下的/themes/目录下看到landscape文件夹。我们的themes文件夹里可以放很多主题的文件夹，但是实际上我们的网站采用哪一个主题，这是需要我们进行配置的，打开编辑全局配置文件，找到下面的内容： # Extensions #扩展 ## Plugins: https://hexo.io/plugins/ ## Themes: https://hexo.io/themes/ theme: next #博客主题，默认是landscape 配置主题配置文件主题配置文件位于站点目录下的/themes/next/目录下，打开编辑，这里我们只贴出需要修改的地方进行介绍，如下： （1）配置基本信息# 网站图标，将其放在hexo站点/source/目录下 favicon: /logo.jpg # 关键词，例如下面是我写的 keywords: &quot;Python,Life,Android&quot; # 网站建立时间，显示在页面底部 since: 2016 # 网站版权声明，显示在页面底部 copyright: true 找到主题配置文件的如下，其中#号表示注释，要启用哪一种样式就把#号去掉即可。 # Schemes #scheme: Muse #scheme: Mist scheme: Pisces （2）设置菜单菜单内容的设置格式是：item name: link。其中 item name 是一个名称，这个名称并不直接显示在页面上，它将用于匹配图标以及翻译。 menu: home: / archives: /archives categories: /categories tags: /tags about: /about #sitemap: /sitemap.xml #commonweal: /404.html 此设定格式是 item name: icon name，其中 item name 与上一步所配置的菜单名字对应，icon name 是 Font Awesome 图标的 名字。而 enable 可用于控制是否显示图标，你可以设置成 false 来去掉图标。 menu_icons: enable: true #KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome home: home about: user categories: th schedule: calendar tags: tags archives: archive sitemap: sitemap commonweal: heartbeat 测试配置效果1$ hexo clean #用于清除缓存 2$ hexo generate #生成静态网页 3$ hexo server #开启本地预览 访问：http://localhost:4000/ 查看效果。 解决遇到的问题到这里会发现点击左侧菜单的分类、标签和关于会提示找不到页面。这是因为我们只是创建了菜单，还没有创建相应的页面。新建页面的hexo命令是： $ hexo new page “pageName” 我们新建分类、标签、关于页面： $ hexo new page ‘categories’ $ hexo new page ‘tags’ $ hexo new page ‘about’分别执行完这三条命令后，我们会发现站点目录下的/source/目录下多了三个文件夹：categories，tags，about，每个文件夹里面都会生成一个index.md文件，如下：默认都只会生成title和date字段，我们要为其添加上type字段，并赋值。 这样我们的这几个页面也就没有问题了。至此，基本的配置也就完成了，接下来介绍如何写博客与发布博客。 发布博客新建博客文章实例：新建博客《我的第一篇博客》 $ hexo new “我的第一篇博客”到站点目录下的/source/_posts/目录下可以看到生成了名为：我的第一篇博客.md的文件，这是Markdown格式的文件，可以选择一款你喜欢的编辑器打开进行编辑，我个人用的是Visual Studio Code,也可以下载一个MarkdownPad来编辑Markdown文件。Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。如果你没有使用过Markdown编辑器，那请你自己去学习一下Markdown语法。Markdown 语法说明(简体中文版)：http://www.appinn.com/markdown/ 编辑博客 title: 我的第一篇博客tags: 技术 categories: 教程tags字段是文章的标签，可以指定标签也可以不指定，如果要指定多个标签需要这样做： tags: [Linux,Http,网络]我们可以添加上categories字段，对博客进行分类管理，然后点击主页左侧菜单的分类就可看到具体的分类。例如： categories: 教程 阅读全文如本篇文章设置title: hexo站点配置 tags: 技术 categories: 教程 --- 文章摘要（此篇博客主要讲解Hexo的站点配置、主题配置和使用以及博客文章的发布。） &lt;!--more--&gt; 文章正文 发布$ hexo clean #清除缓存 网页正常情况下可以忽略此条命令 $ hexo generate #生成静态页面至public目录 写好之后可以现在本地预览，确定无误之后再部署到Github上。 $ hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server） $ hexo deploy #将.deploy目录部署到GitHub 个性化配置个性化配置请参考：https://segmentfault.com/a/1190000009544924]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[github page+hexo搭建博客]]></title>
    <url>%2F2018%2F01%2F12%2Fgithub-page-hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[搭建博客的时候看了很多知乎大神的教程，也遇到了不少问题，这里把教程和问题整理下 Github Pagegithub注册就不多说了,我们直接从新建库开始1.点击头像旁下拉菜单，选择新建仓库仓库名建议为：用户名.github.io 2.新建好仓库选择”Settings”,找到Github Pages,选择一个主题，确认 3.接下来就可以直接访问了,地址为：注意：如果你的仓库名是按上述，用户名.github.io形式设置，则仓库名即为访问地址。如果你想自定义绑定自己的域名，还是建议按上面的仓库名格式设置如果仓库名是随意取的，地址则为https://github.com/用户名/仓库名 下载并安装Git下载根据自己电脑操作系统到git官网下载相应的版本：https://git-scm.com/download/win 安装根据自己需要安装到相应的路径下，其余的选择next即可 配置环境变量右击桌面图标计算机，选择属性–&gt;高级系统设置，选择环境变量，编辑path，将git的安装目录粘贴添加到path后。（每一个新增的路径后要带上英文格式的分号） 测试是否安装成功打开命令提示符，输入： git –version安装成功会打印出本机安装的git版本。 添加SSH KEY到Github（1）检查本机是否有SSH KEY设置打开git bash，输入: cd~/.ssh或cd.ssh如果没有则提示：No such file or directory如有则进入~/.ssh路径，删除所有文件 （2）配置生成SSH KEY1.$ cd ~ #保证当前路径在”~”下 2.$ ssh-keygen -t rsa -C &quot;这里填写你的邮箱地址&quot; 3.Generating public/private rsa key pair. 4.Enter file in which to save the key (/c/Users/xxxx_000/.ssh/id_rsa): #不填直接回车 5.Enter passphrase (empty for no passphrase): #输入密码（可以为空） 6.Enter same passphrase again: #再次确认密码（可以为空） 7.Your identification has been saved in /c/Users/xxxx_000/.ssh/id_rsa. #生成的密钥 8.Your public key has been saved in /c/Users/xxxx_000/.ssh/id_rsa.pub. #生成的公钥 9.The key fingerprint is: 10.e3:51:33:xx:xx:xx:xx:xxx:61:28:83:e2:81 xxxxxx@yy.com 生成ssh key的存放路径为：c:/Users/你电脑的用户名/.ssh/下。 （3）复制SSH KEY到Github到C盘你的用户目录下找到.ssh文件夹，查看里面是否有id_rsa和id_rsa.pub这两个文件。 登录GitHub系统；点击右上角账号头像的“▼”→Settings→SSH and GPG kyes→new SSH key，Title自定义，复制id_rsa.pub的公钥内容到GitHub中Add an SSH key的key输入框，最后“Add Key”。 （4）配置账户1.$ git config --global user.name “your_username” #设置用户名 2.$ git config --global user.email “your_registered_github_Email” 3.#设置邮箱地址(建议用注册giuhub的邮箱) （5）测试SSH KEY是否设置成功$ ssh -T git@github.com 接下来会返回一些信息，并需要你输入一次yes，若生成ssh key时设置有密码则还会让你输入生成ssh key时设置的密码。Hi xxx! You’ve successfully authenticated, but GitHub does not provide shell access. #出现词句话，说明设置成功。 下载并安装node.js下载根据自己电脑操作系统的位数到官网下载相应的版本：https://nodejs.org/en/download/ 安装根据自己的需要安装到相应的地方，其他的一路点击next即可。 配置环境变量选中桌面图标计算机，右键选择属性，打开左边的高级系统设置，打开弹出窗口的环境变量，找到path进行编辑。找到node.js的安装目录，将其复制后粘贴到path后面。注意每一个加进来的路径后面都要带英文格式的分号。 测试是否安装成功打开命令提示符，输入：node –version如果安装成功，会打印出本机安装node.js的版本。 安装和配置hexohexo是基于node.js的静态博客，官网也是搭建在GitHub上。 安装在你喜欢的路径下新建一个文件夹blog，用来存放博客的文件，在此文件夹中右键打开Git Bash输入如下指令进行安装： $ npm install -g hexo-cli如果执行这条命令时长时间未成功，那么请先使用下面的命令将npm镜像源更改为国内的镜像，再执行上面的安装命令，因为国外的镜像源很有可能被墙了。 $ npm config set registry https://registry.npm.taobao.org 初始化hexo$ hexo init hexo 这里会将Github上的hexo项目clone下来，得到hexo文件夹。初始化成功后会在最后打印一行：INFO Start blogging with Hexo! 安装依赖文件1.$ cd hexo 2.$ npm install 生成静态页面$ hexo generate 本地启动测试$ hexo server 在浏览器输入：http://localhost:4000/ 即可访问到我们搭建好的hexo站点。至此本地搭建已经完成。 将本地hexo项目托管到Github修改全局配置文件_config.yml说明： hexo文件夹下一个_config.yml，我们称之为全局配置文件，在每个主题文件夹内还会有一个_config.yml文件，我们称之为主题配置文件。用sublime text3或者notepad++等编辑器打开hexo文件夹下的_config.yml文件。注意：配置文件中每个字段后面的冒号是英文格式的，且在其后要加一个空格再写值编辑最后面的deploy属性，加入代码： 1.type: git 2.repository: https://github.com/你的Github用户名/你的Github用户名.github.io.git 3.branch: master 安装hexo-deployer-git插件$ npm install hexo-deployer-git --save 部署到Github上1.$ hexo clean #清除缓存 网页正常情况下可以忽略此条命令 2.$ hexo generate #生成静态页面至public目录 3.$ hexo deploy #将.deploy目录部署到GitHub 执行hexo deploy命令之后，如果最后一行打印出如下信息则表示部署成功 INFO Deploy done: git然后你再去访问你创建的Github pages地址，也就是：你的Github用户名.github.io，即可看到你本地的hexo项目已经被部署到github上去了。 到此已经可以在网上访问到自己的博客了，如果想自定义博客的域名需要两个步骤1.自己申请个域名，将博客地址解析到域名2.在github项目下新建个CNAME文件，不要给后缀名，文件里输入你申请的域名即可 这篇文章就到这里，下篇写下hexo主题更换以及文章如何上传。]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[shadowsocks安装]]></title>
    <url>%2F2018%2F01%2F12%2Fshadowsocks%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[之前搭建ss的时候遇到的一些问题 一、购买服务器（优惠码：BWH1ZBPVK）CentOS 6 64位点我跳转之前买的是这个配置KVMV3-10G-512M-500M-CA-CN2，每个月有500G的流量，一年的价格是29.99美元，建议地址选在洛杉矶。个人觉得还是比较划算的，但是最近看官网好像没有存货了。 二、服务器配置1.wget --no-check-certificate -O shadowsocks.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh 2.chmod +x shadowsocks.sh 3../shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log 可能出现的问题：-bash: wget: command not found 解决办法：yum -y install wget 修改端口号：/etc下shadowsocks.json文件 重启shadowsocks：/etc/init.d/shadowsocks restart 关闭防火墙（iptables）：/etc/init.d/iptables stop 没有配上图文，后期有时间会慢慢补上]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[先说几句]]></title>
    <url>%2F2018%2F01%2F11%2F%E5%85%88%E8%AF%B4%E5%87%A0%E5%8F%A5%2F</url>
    <content type="text"><![CDATA[开始之前，先闲聊几句。一直想建个博客，主要用来记录一下前端学习道路上遇到的一些坑。网上搜了挺多教程，知乎上很多人推荐这个就试了下。之前做的大多是cms相关的工作，标准的切图仔。痛定思痛，要好好走自己的前端道路了。一入代码深似海，从此妹子是路人。]]></content>
      <categories>
        <category>随便写写</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>鸡汤</tag>
      </tags>
  </entry>
</search>
